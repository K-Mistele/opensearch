/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import type { Image, Audio } from "@boundaryml/baml"
import type { Checked, Check } from "./types"
import type {  GenerateQueryArgs,  Message,  Query,  QueryGenerationState,  Reflection,  ReflectionState,  SearchQueryList,  SearchResult,  SearchStateOutput,  WebSearchState } from "./types"
import type * as types from "./types"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
    value: T
    state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    
    export interface GenerateQueryArgs {
        research_topic?: (string | null)
        current_date?: (string | null)
        number_queries: ((number | null) | null)
    }
    
    export interface Message {
        role?: (string | null)
        content?: (string | null)
    }
    
    export interface Query {
        query?: (string | null)
        rationale?: (string | null)
    }
    
    export interface QueryGenerationState {
        search_query?: (partial_types.Query | null)[]
    }
    
    export interface Reflection {
        isSufficient?: (boolean | null)
        knowledgeGap: ((string | null) | null)
        followUpQueries: ((string | null)[] | null)
        followupQueriesRationale: ((string | null)[] | null)
    }
    
    export interface ReflectionState {
        is_sufficient?: (boolean | null)
        knowledge_gap?: (string | null)
        follow_up_queries?: (string | null)[]
        research_loop_count?: (number | null)
        number_of_ran_queries?: (number | null)
    }
    
    export interface SearchQueryList {
        query?: (string | null)[]
        rationale?: (string | null)
    }
    
    export interface SearchResult {
        url?: (string | null)
        id?: (string | null)
        title?: (((string | null) | null) | ((null | null) | null) | null)
        highlights?: (string | null)[]
        highlightScores?: (number | null)[]
        text?: (string | null)
    }
    
    export interface SearchStateOutput {
        running_summary: ((string | null) | null)
    }
    
    export interface WebSearchState {
        search_query?: (string | null)
        id?: (string | null)
    }
    
}